---
- hosts: all
  become: true
  #vars_files:
  #  - vars/default.yml

  tasks:
    - name: Create a network for Traefik
      docker_network:
        name: traefik

    - name: Create a Traefik container
      docker_container:
        name: traefik
        image: traefik:v2.9
        recreate: yes
        command:
          - --log.level=DEBUG
          - --entrypoints.web.address=:80
          - --entrypoints.websecure.address=:443
          - --providers.docker
          - --api
          - --api.dashboard=true
          - --certificatesResolvers.letsencrypt.acme.email=nandothomassen@gmail.com
          - --certificatesResolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
          - --certificatesResolvers.letsencrypt.acme.tlsChallenge=true
          - --certificatesResolvers.letsencrypt.acme.dnsChallenge=false
          #- --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          - --serverstransport.insecureskipverify=true
        restart_policy: unless-stopped
        labels:
          # Request a certificate for the domains thomassen.pro (main) and *.tools.thomassen.pro (SAN)
          traefik.http.routers.traefik.tls: 'true'
          traefik.http.routers.traefik.tls.certresolver: letsencrypt
          traefik.http.routers.api.rule: Host(`traefik.tools.thomassen.pro`)
          traefik.http.routers.api.service: api@internal
          traefik.http.routers.traefik.entrypoints: websecure
          traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
          traefik.http.routers.redirs.rule: hostregexp(`{host:.+}`)
          traefik.http.routers.redirs.entrypoints: web
          traefik.http.routers.redirs.middlewares: redirect-to-https
        ports:
          - 80:80
          - 443:443
        volumes:
          - "/etc/letsencrypt:/letsencrypt/"
          - "/var/run/docker.sock:/var/run/docker.sock"
        networks:
          - name: traefik
